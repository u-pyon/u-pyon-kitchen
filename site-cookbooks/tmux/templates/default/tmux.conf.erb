# Prefix
set-option -g prefix C-j

# Language
setw -g utf8 on
set -g status-utf8 on

# Status bar
set -g status-interval 1
set -g status-bg colour235   # bar-background color
set -g status-fg colour255     # bar-foreground color
setw -g window-status-current-fg black
setw -g window-status-current-bg white

#set -g status-left-length 30
#set -g status-left '#[fg=colour32, bold]#H: #[fg=colour197]#S' # left
#set -g status-right '#[fg=colour241, bold] %Y-%m-%d(%a) %H:%M' # right

# Keybind (general)
bind C-r source-file ~/.tmux.conf; display-message "Reload config!!"
bind-key D detach-client

# pane-active-border
set -g pane-active-border-fg colour134

# Keybind (pane)
bind V split-window -v
bind H split-window -h

unbind C-k
bind K confirm-before -p "kill-pane #P? (y/n)" kill-pane

# vi mode
set-window-option -g mode-keys vi
set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]>#[fg=colour255, bg=colour27] #I > #W #[fg=colour27, bg=colour=235]>"

# copy and paste
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-selection
bind y copy-mode
bind p paste-buffer

# increse history
set-option -g history-limit 10000

# Mouse
set-option -g mouse-select-pane off
set-option -g mouse-select-window off
set-option -g mouse-resize-pane off
set-option -g mode-mouse off

# moving window with arrow key
bind -n S-right next-window
bind -n S-left previous-window

# change step of moving window
bind -r    Up resize-pane -U 2 # up
bind -r  Down resize-pane -D 2 # down
bind -r  Left resize-pane -L 2 # left
bind -r Right resize-pane -R 2 # right

# enable vim like key bind when moving pane
bind -r j select-pane -U # up
bind -r k select-pane -D # down
bind -r l select-pane -L # left
bind -r h select-pane -R # right

# Alt + arrow key to move pane
bind -n M-Up    select-pane -U # up
bind -n M-Down  select-pane -D # down
bind -n M-Left  select-pane -L # left
bind -n M-Right select-pane -R # right

# rename window
bind-key A command-prompt 'rename-window %%'

# Move between windows
bind -n S-n next-window
bind -n S-p previous-window

# powerline setting
set-option -g status on
set-option -g status-interval 15
set-option -g status-utf8 on

# window list alignment
set-option -g status-justify "left"
set-option -g status-left-length 150
set-option -g status-right-length 150
set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"
#if "~/.tmux/tmux-powerline-wrapper/test-tmux-powerline.sh" "set-option -g status-left '#(~/.tmux/tmux-powerline-wrapper/status-left.sh)'"

#if "~/.tmux/tmux-powerline-wrapper/test-tmux-powerline.sh" "set-option -g status-right '#(~/.tmux/tmux-powerline-wrapper/status-right.sh)'"


# ssh
unbind s
bind-key s command-prompt "new-window -n ssh 'ssh -t %1'"
bind-key ^s command-prompt "split-window -h 'ssh -t %1'"
bind-key S command-prompt "split-window 'ssh -t %1'"

# Enable select pane with mouse select
set-option -g mouse-select-pane off

# Send screen buffer
bind S run "tmux capture-pane -S -10000; tmux show-buffer | /usr/sbin/sendmail yuichi.oikawa@gmail.com"

